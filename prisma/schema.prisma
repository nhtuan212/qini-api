generator client {
  provider        = "prisma-client-js"
  output          = "../dist/generated/client"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:123@45.251.114.243:2222/qini_db"
}

model User {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  username   String    @unique @db.VarChar(50)
  password   String    @db.VarChar(100)
  email      String?   @unique @db.VarChar(50)
  active     Boolean   @default(true)
  created_at DateTime  @default(now()) @db.Timestamp(6)
  role       Role      @default(REPORT)
  updated_at DateTime? @db.Timestamp(6)

  @@map("user")
}

model Staff {
  id             String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name           String      @unique @db.VarChar(50)
  salary         Float       @default(0) @db.Real
  is_target      Boolean     @default(false)
  is_first_login Boolean     @default(true)
  active         Boolean     @default(true)
  created_at     DateTime    @default(now()) @db.Timestamp(6)
  updated_at     DateTime?   @db.Timestamp(6)
  password       String?     @db.VarChar(255)
  time_sheet     TimeSheet[]

  @@map("staff")
}

model Shift {
  id          String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  kiot_id     String?       @db.VarChar(50)
  name        String        @unique @db.VarChar(50)
  start_time  String        @default("") @db.VarChar(10)
  end_time    String        @default("") @db.VarChar(10)
  is_target   Boolean       @default(false)
  created_at  DateTime      @default(now()) @db.Timestamp(6)
  updated_at  DateTime?     @db.Timestamp(6)
  TargetShift TargetShift[]
  TimeSheet   TimeSheet[]

  @@map("shift")
}

model Target {
  id           String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name         String        @db.VarChar(50)
  target_at    DateTime      @db.Date
  created_at   DateTime      @default(now()) @db.Timestamptz(0)
  updated_at   DateTime?     @db.Timestamptz(0)
  target_shift TargetShift[]

  @@unique([target_at])
  @@map("target")
}

model TargetShift {
  id          String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  target_id   String      @db.Uuid
  shift_id    String      @db.Uuid
  cash        Float       @default(0) @db.Real
  transfer    Float       @default(0) @db.Real
  point       Float       @default(0) @db.Real
  deduction   Float       @default(0) @db.Real
  revenue     Float       @default(0) @db.Real
  description String?     @default("") @db.VarChar(200)
  created_at  DateTime    @default(now()) @db.Timestamptz(0)
  updated_at  DateTime?   @updatedAt @db.Timestamptz(0)
  shift       Shift       @relation(fields: [shift_id], references: [id], onDelete: Cascade)
  target      Target      @relation(fields: [target_id], references: [id], onDelete: Cascade)
  time_sheet  TimeSheet[]

  @@unique([target_id, shift_id])
  @@map("target_shift")
}

model TimeSheet {
  id              String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  staff_id        String      @db.Uuid
  shift_id        String      @db.Uuid
  target_shift_id String      @db.Uuid
  check_in        String      @default("") @db.VarChar(10)
  check_out       String      @default("") @db.VarChar(10)
  working_hours   Float       @default(0) @db.Real
  date            DateTime?   @db.Date
  created_at      DateTime    @default(now()) @db.Timestamptz(0)
  updated_at      DateTime?   @db.Timestamptz(0)
  staff           Staff       @relation(fields: [staff_id], references: [id], onDelete: Cascade)
  shift           Shift       @relation(fields: [shift_id], references: [id], onDelete: Cascade)
  TargetShift     TargetShift @relation(fields: [target_shift_id], references: [id], onDelete: Cascade)

  @@map("time_sheet")
}

enum Role {
  ADMIN
  REPORT
  MANAGER
}
